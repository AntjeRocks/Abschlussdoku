---
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  LiveAccountId:
    Type: String
    AllowedPattern: "[0-9]*"
    Default: "407420265679"
    MaxLength: 12
    MinLength: 12
  NonliveAccountId:
    Type: String
    AllowedPattern: "[0-9]*"
    Default: "545150822921"
    MaxLength: 12
    MinLength: 12
  ServiceName:
    Type: String
    Default: "imageprocessing"
  TeamName:
    Type: String
    Default: "social"
  PipelineRunnerRoleName:
    Type: String
    Default: imageprocessing-pipeline-runner
  PipelineExecutorRoleName:
    Type: String
    Default: imageprocessing-pipeline-executor
  RepositoryOwner:
    NoEcho: true
    Type: String
  RepositoryAccessToken:
    NoEcho: true
    Type: String
  RepositoryPrefix:
    Type: String
    Default: "social_"

Resources:
  DevelopImageprocessingProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${ServiceName}-codebuild-project-develop"
      Artifacts:
        Type: CODEPIPELINE
      EncryptionKey: !ImportValue pipeline-artifact-store-encryption-key
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:7.0.0
      ServiceRole: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yaml
      Tags:
        - Key: team
          Value: !Sub "${TeamName}"
        - Key: vertical
          Value: !Sub "${TeamName}"
        - Key: service
          Value: !Sub "${ServiceName}"
        - Key: environment
          Value: "develop"

  DevelopImageprocessingLoggingProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${ServiceName}-codebuild-logging-project-develop"
      Artifacts:
        Type: CODEPIPELINE
      EncryptionKey: !ImportValue pipeline-artifact-store-encryption-key
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:7.0.0
        EnvironmentVariables:
          - Name: ENVIRONMENT
            Value: develop
          - Name: PIPELINE
            Value: true
      ServiceRole: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec_logging.yml
      Tags:
        - Key: team
          Value: !Sub "${TeamName}"
        - Key: vertical
          Value: !Sub "${TeamName}"
        - Key: service
          Value: !Sub "${ServiceName}"
        - Key: environment
          Value: "develop"

  LiveImageprocessingProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${ServiceName}-codebuild-project-live"
      Artifacts:
        Type: CODEPIPELINE
      EncryptionKey: !ImportValue pipeline-artifact-store-encryption-key
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:7.0.0
      ServiceRole: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec_service.yml
      Tags:
        - Key: team
          Value: !Sub "${TeamName}"
        - Key: vertical
          Value: !Sub "${TeamName}"
        - Key: service
          Value: !Sub "${ServiceName}"
        - Key: environment
          Value: "live"

  LiveImageprocessingLoggingProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${ServiceName}-codebuild-logging-project-live"
      Artifacts:
        Type: CODEPIPELINE
      EncryptionKey: !ImportValue pipeline-artifact-store-encryption-key
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:7.0.0
        EnvironmentVariables:
          - Name: ENVIRONMENT
            Value: live
          - Name: PIPELINE
            Value: true
      ServiceRole: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec_logging.yml
      Tags:
        - Key: team
          Value: !Sub "${TeamName}"
        - Key: vertical
          Value: !Sub "${TeamName}"
        - Key: service
          Value: !Sub "${ServiceName}"
        - Key: environment
          Value: "live"

  ImageprocessingPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub "${ServiceName}"
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !ImportValue pipeline-artifact-store-encryption-key
          Type: KMS
        Location: !ImportValue pipeline-artifact-store
      RestartExecutionOnUpdate: true
      RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineRunnerRoleName}"
      Stages:
        # https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html#action-requirements
        - Name: checkout
          Actions:
            - Name: !Sub "${ServiceName}"
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref RepositoryOwner
                Repo: !Sub "${RepositoryPrefix}${ServiceName}"
                Branch: master
                OAuthToken: !Ref RepositoryAccessToken
              OutputArtifacts:
                - Name: Source
              RunOrder: 1
        - Name: build-develop
          Actions:
            - Name: !Sub "${ServiceName}"
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref DevelopImageprocessingProject
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: DevelopBuild
              RunOrder: 1
        - Name: deploy-Nonlive
          Actions:
            - Name: service-resources
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: |
                  {
                    "Environment": "develop"
                  }
                RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-service-resources-develop"
                TemplatePath: "Source::cloudformation/ci/service-resources.yaml"
              InputArtifacts:
                - Name: Source
              RunOrder: 1
              RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
            - Name: service
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: |
                  {
                    "KmsKeyArn": "arn:aws:kms:eu-central-1:545150822921:key/77b4108a-cc91-4348-8937-27cd2b1c8dde",
                    "Environment": "develop",
                    "Account": "nonlive",
                    "DeploymentPackageKey": {
                      "Fn::GetArtifactAtt": ["DevelopBuild", "ObjectKey"]
                    }
                  }
                RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-service-develop"
                TemplatePath: "DevelopBuild::cloudformation/ci/services.yaml"
              InputArtifacts:
                - Name: DevelopBuild
              RunOrder: 2
              RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
            - Name: api
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: |
                  {
                    "Environment": "develop",
                    "DeploymentStage": "DEVELOP",
                    "CacheEnabled": "false"
                  }
                RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-api-develop"
                TemplatePath: "Source::cloudformation/infrastructure/api.yaml"
              InputArtifacts:
                - Name: Source
              RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
              RunOrder: 3
            - Name: api-compose
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: |
                  {
                    "Environment": "develop",
                    "DeploymentStage": "DEVELOP",
                    "CacheEnabled": "false"
                  }
                RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-compose-api-develop"
                TemplatePath: "Source::cloudformation/infrastructure/compose-api.yaml"
              InputArtifacts:
                - Name: Source
              RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
              RunOrder: 3
            - Name: service-subscription-filter
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: |
                  {
                    "Environment": "develop"
                  }
                RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-service-subscription-filter-develop"
                TemplatePath: "Source::cloudformation/ci/service-subscription-filter.yaml"
              InputArtifacts:
                - Name: Source
              RunOrder: 4
              RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
            - Name: alarming
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                ParameterOverrides: |
                  {
                    "Environment": "develop",
                    "DeploymentStage": "DEVELOP"
                  }
                RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-alarming-develop"
                TemplatePath: "Source::cloudformation/infrastructure/alarming.yaml"
              InputArtifacts:
                - Name: Source
              RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
              RunOrder: 4
            - Name: api-access
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-api-access-develop"
                TemplatePath: "Source::cloudformation/infrastructure/api-access.yaml"
                ParameterOverrides: |
                  {
                    "Environment": "develop"
                  }
              InputArtifacts:
                - Name: Source
              RunOrder: 4
              RoleArn: !Sub "arn:aws:iam::${NonliveAccountId}:role/${PipelineExecutorRoleName}"
        - Name: logging-develop
          Actions:
            - Name: !Sub "${ServiceName}-logging"
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref DevelopImageprocessingLoggingProject
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: DevelopLoggingBuild
              RunOrder: 1
        - Name: build-live
          Actions:
            - Name: !Sub "${ServiceName}"
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref LiveImageprocessingProject
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: LiveBuild
              RunOrder: 1
        - Name: deploy-live
          Actions:
            - Name: service-resources
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: |
                  {
                    "Environment": "live"
                  }
                RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-service-resources-live"
                TemplatePath: "Source::cloudformation/ci/service-resources.yaml"
              InputArtifacts:
                - Name: Source
              RunOrder: 1
              RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
            - Name: service
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: |
                  {
                    "KmsKeyArn": "arn:aws:kms:eu-central-1:407420265679:key/880460bd-d068-48f8-87c1-4af3559df250",
                    "Environment": "live",
                    "Account": "live",
                    "DeploymentPackageKey": {
                      "Fn::GetArtifactAtt": ["LiveBuild", "ObjectKey"]
                    }
                  }
                RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-service-live"
                TemplatePath: "LiveBuild::cloudformation/ci/services.yaml"
              InputArtifacts:
                - Name: LiveBuild
              RunOrder: 2
              RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
            - Name: api
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: |
                  {
                    "Environment": "live",
                    "DeploymentStage": "LIVE",
                    "CacheEnabled": "true"
                  }
                RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-api-live"
                TemplatePath: "Source::cloudformation/infrastructure/api.yaml"
              InputArtifacts:
                - Name: Source
              RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
              RunOrder: 3
            - Name: api-compose
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: |
                  {
                    "Environment": "live",
                    "DeploymentStage": "LIVE",
                    "CacheEnabled": "true"
                  }
                RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-compose-api-live"
                TemplatePath: "Source::cloudformation/infrastructure/compose-api.yaml"
              InputArtifacts:
                - Name: Source
              RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
              RunOrder: 3
            - Name: service-subscription-filter
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: |
                  {
                    "Environment": "live"
                  }
                RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-service-subscription-filter-live"
                TemplatePath: "Source::cloudformation/ci/service-subscription-filter.yaml"
              InputArtifacts:
                - Name: Source
              RunOrder: 4
              RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
            - Name: alarming
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                ParameterOverrides: |
                  {
                    "Environment": "live",
                    "DeploymentStage": "LIVE"
                  }
                RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-alarming-live"
                TemplatePath: "Source::cloudformation/infrastructure/alarming.yaml"
              InputArtifacts:
                - Name: Source
              RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
              RunOrder: 4
            - Name: api-access
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
                StackName: !Sub "${ServiceName}-api-access-live"
                TemplatePath: "Source::cloudformation/infrastructure/api-access.yaml"
                ParameterOverrides: |
                  {
                    "Environment": "live"
                  }
              InputArtifacts:
                - Name: Source
              RunOrder: 4
              RoleArn: !Sub "arn:aws:iam::${LiveAccountId}:role/${PipelineExecutorRoleName}"
        - Name: logging-live
          Actions:
            - Name: !Sub "${ServiceName}-logging"
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref LiveImageprocessingLoggingProject
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: LiveLoggingBuild
              RunOrder: 1
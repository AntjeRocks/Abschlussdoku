#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\begin_preamble
\usepackage[ngerman]{babel}
\usepackage[T1]{fontenc}
\usepackage{microtype}
\end_preamble
\options idxtotoc
\use_default_options true
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\begin_forced_local_layout
Format 60
Style "In Preamble"
	Category "FrontMatter"
	Margin Static
	LatexType Paragraph
	InTitle 0
	InPreamble 1
	TocLevel -1000
	NeedProtect 0
	KeepEmpty 0
	NextNoIndent 0
	CommandDepth 0
	LatexName "dummy"
	ItemCommand item
	LabelType No_Label
	EndLabelType No_Label
	ParagraphGroup "0"
	ParIndent MM
	ParSkip 0.4
	ItemSep 0
	TopSep 0
	BottomSep 0
	LabelBottomSep 0
	ParSep 0
	NewLine 1
	Align Block
	AlignPossible Block, Center, Layout, Left, Right
	FreeSpacing 0
	PassThru 0
	ParbreakIsNewline 0
	RefPrefix OFF
	HTMLLabelFirst 0
	HTMLStyle
div.standard {
text-indent: 2em;
margin-bottom: 2ex;
}
	EndHTMLStyle
	HTMLForceCSS 0
	HTMLTitle 0
	Spellcheck 1
	ForceLocal 1
End
Style "In Title"
	Category "FrontMatter"
	Margin Static
	LatexType Paragraph
	InTitle 1
	InPreamble 0
	TocLevel -1000
	NeedProtect 0
	KeepEmpty 0
	NextNoIndent 0
	CommandDepth 0
	LatexName "dummy"
	ItemCommand item
	LabelType No_Label
	EndLabelType No_Label
	ParagraphGroup "0"
	ParIndent MM
	ParSkip 0.4
	ItemSep 0
	TopSep 0
	BottomSep 0
	LabelBottomSep 0
	ParSep 0
	NewLine 1
	Align Block
	AlignPossible Block, Center, Layout, Left, Right
	FreeSpacing 0
	PassThru 0
	ParbreakIsNewline 0
	RefPrefix OFF
	HTMLLabelFirst 0
	HTMLStyle
div.standard {
text-indent: 2em;
margin-bottom: 2ex;
}
	EndHTMLStyle
	HTMLForceCSS 0
	HTMLTitle 0
	Spellcheck 1
	ForceLocal 1
End
\end_forced_local_layout
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "helvet" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command makeindex
\float_placement H
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\rightmargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language polish
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\bullet 0 0 0 -1
\bullet 1 0 1 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{gobble}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
makeatletter
\end_layout

\begin_layout Plain Layout


\backslash
let
\backslash
ps@plain
\backslash
ps@fancy % Plain page style = fancy page style
\end_layout

\begin_layout Plain Layout


\backslash
makeatother
\end_layout

\end_inset


\end_layout

\begin_layout Title
Dokumentation der betrieblichen Projektarbeit
\end_layout

\begin_layout Subtitle
Migration eines über einen Dienstleister gehosteten Microservice in die
 Amazon Web Services-Umgebung
\end_layout

\begin_layout Author
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{
\backslash
normalsize{
\end_layout

\end_inset

Ausbildungsberuf 
\begin_inset ERT
status open

\begin_layout Plain Layout

}}
\backslash

\backslash

\backslash
small{
\end_layout

\end_inset

Fachinformatiker Fachrichtung Systemintegration
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash

\backslash

\backslash
textbf{
\backslash
normalsize{
\end_layout

\end_inset

Prüfungsbewerberin
\begin_inset ERT
status open

\begin_layout Plain Layout

}}
\backslash

\backslash

\backslash
small{
\end_layout

\end_inset

Antje Radkiewicz
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash

\backslash

\backslash
small{
\end_layout

\end_inset

Loher Straße 15b
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash

\backslash

\backslash
small{
\end_layout

\end_inset

22149 Hamburg
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash

\backslash

\backslash
textbf{
\backslash
normalsize{
\end_layout

\end_inset

Ausbildungsbetrieb
\begin_inset ERT
status open

\begin_layout Plain Layout

}}
\backslash

\backslash

\backslash
small{
\end_layout

\end_inset

OTTO (GmbH & Co.
 KG)
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash

\backslash

\backslash
small{
\end_layout

\end_inset

Werner-Otto-Straße 1-7
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\backslash

\backslash

\backslash
small{
\end_layout

\end_inset

22179 Hamburg
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Left Header
Inhaltsverzeichnis
\end_layout

\begin_layout Right Header
Antje Radkiewicz
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Enumerate
Die Dokumentation soll dem Auftrag angemessen sein und Folgendes enthalten:
 
\end_layout

\begin_layout Enumerate
Name und Ausbildungsberuf des Auszubildenden
\end_layout

\begin_layout Enumerate
Angabe des Ausbildungsbetriebes/Prüfbetriebes
\end_layout

\begin_layout Enumerate
Thema der Projektarbeit
\end_layout

\begin_layout Enumerate
Falls erforderlich eine Beschreibung/Konkretisierung des Auftrages
\end_layout

\begin_layout Enumerate
Umfassende Beschreibung der Prozessschritte und der erzielten Ergebnisse
\end_layout

\begin_layout Enumerate
Begründung bei ggf.
 Veränderungen zum Projektantrag (Änderungen zum Projektantrag sind nur
 im eng begrenzten Rahmen zulässig, Projektinhalte dürfen nicht wesentlich
 ver- ändert werden)
\end_layout

\begin_layout Enumerate
Wenn für das Projekt erforderlich, ein Anhang mit praxisbezogenen Unterlagen
 und Do- kumenten.
 Dieser Anhang sollte auf das Minimum beschränkt werden.
\end_layout

\begin_layout Enumerate
In allen IT-Berufen ist es erforderlich, dass ein wirtschaftlicher Aspekt
 berücksichtigt wird, z.
 B.
 Kosten-Nutzen-Analyse, Kalkulation, Angebotserstellung, Angebotsvergleich
 etc.
 Bei den kaufmännischen IT-Berufen sind auch technische Aspekte zu berücksichtig
en, z.
 B.
 Funktionsbeschreibung, exemplarische Konfiguration etc.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
renewcommand*{
\backslash
thesection}{
\backslash
arabic{section}}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand*{
\backslash
thefigure}{
\backslash
alph{figure}}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand*{
\backslash
thetable}{
\backslash
alph{table}}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Dokumentation der betrieblichen Projektarbeit
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Migration eines über einen Dienstleister gehosteten Microservice in die
 Amazon Web Services-Umgebung
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{
\backslash
textbf{Einleitung}}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Einleitung
\end_layout

\begin_layout Left Header
Einleitung
\end_layout

\begin_layout Standard
Dieses Dokument ist im Rahmen der betrieblichen Projektarbeit für den Ausbildung
sgang des Fachinformatikers in der Fachrichtung Systemintegration entstanden.
 Das Projekt wurde im genehmigten Projektzeitraum vom 
\color black
27.
 März 2018 bis zum 14.
 Mai 2018
\color inherit
 durchgeführt.
 Weiterhin wurde im Rahmen des Durchführungszeitraumes diese Dokumentation
 erstellt.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Diese Dokumentation richtet sich an Personen die in der Fachrichtung Informatik
 Vorwissen besitzen.
 In dieser Dokumentation werden fachbezogene Begriffe verwendet, die im
 Glossar näher erläutert werden.
 Fachbegriffe, die in dem Glossar enthalten sind, werden 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{unterstrichen}
\end_layout

\end_inset

 dargestellt.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Im Textverlauf werden Abkürzungen verwendet.
 Die ausgeschriebene Variante wird einmalig genutzt und hinter dieser wird
 in Klammern die Abkürzung dargestellt.
 Im Abkürzungsverzeichnis können die Abkürzungen und ihre ausgeschriebene
 Variante eingesehen werden.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Des Weiteren werden kurze Beispiele genutzt bei denen ein Attribut gesetzt
 werden muss.
 Hier wird der Name des Attributs mit eckigen Klammern umschlossen, um eine
 solche Stelle zu kennzeichnen.
 Beispiel: www.otto.de/p/[Name des Attributs]
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Code-Beispiele werden in kleinen umrahmten Boxen dargestellt.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Projektbeschreibung
\end_layout

\begin_layout Left Header
Projektbeschreibung
\end_layout

\begin_layout Standard
Im Rahmen der praktischen Abschlussarbeit wurde die Migration eines Teil-Microse
rvices in die 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Amazon Web Services"
description "Cloud Dingsi"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Amazon Web Services}
\end_layout

\end_inset

 (AWS)
\begin_inset Index idx
status open

\begin_layout Plain Layout
Amazon Web Services - AWS
\end_layout

\end_inset

 realisiert.
 Der Microservice bestand aus vier Kernfunktionalitäten.
 Hieraus wurde ein Teil-Service ausgewählt, freigeschnitten und lauffähig
 in die AWS überführt.
 Diese Migrationsaufgabe wurde im Rahmen eines teamübergreifenden strategischen
 Entscheides durchgeführt und einige vordefinierte Rahmenbedingungen mussten
 eingehalten werden.
\end_layout

\begin_layout Section
Projektumfeld
\end_layout

\begin_layout Subsection
OTTO (GmbH & Co.
 KG)
\end_layout

\begin_layout Standard
Die OTTO (GmbH & Co.
 KG) ist ein Versandhandelsunternehmen mit Sitz in Hamburg, welches zur
 Otto Group gehört.
 Diese agiert mit über 49.000 Mitarbeitern weltweit.
 Seit 1995 betreibt das Unternehmen die E-Commerce-Plattform www.otto.de.
\end_layout

\begin_layout Left Header
Projektumfeld
\end_layout

\begin_layout Subsection
E-Commerce
\end_layout

\begin_layout Standard
Der Bereich E-Commerce der OTTO Einzelhandelsgesellschaft betreibt und entwickel
t die Seite www.otto.de.
 Die Plattform ist in mehrere Vertikalen aufgeteilt.
 Für jede Vertikale ist ein Entwicklerteam zuständig, welches die Funktionalität
 der entsprechenden Shop-Segmente verantwortet.
 Die Teams selber sind interdisziplinär aufgestellt, mit dem Ziel eine möglichst
 autarke und zielführende Arbeitsweise zu gestatten.
\end_layout

\begin_layout Subsection
Externer Dienstleister
\end_layout

\begin_layout Standard
Der Bereich E-Commerce wird derzeit durch einen externen Dienstleister bei
 der Bereitstellung von www.otto.de unterstützt.
 Als Lösungspartner für IT-Infrastruktur stellt dieser dem OTTO E-Commerce
 derzeit nicht nur die notwendige Hardware in einem Rechenzentrum, diverse
 Applikationen und Schnittstellen, sondern auch personelle Ressourcen bereit.
\end_layout

\begin_layout Subsection
Team Social
\end_layout

\begin_layout Standard
Team Social stellt mehrere Produkte auf der Shop-Seite bereit, die im Reiter
 Inspiration auf www.otto.de zu finden sind.
 Darunter sind beispielsweise der Feed (www.otto.de/feed), über den man von
 Anwendern zusammengestellte Inhalte abonnieren und betrachten kann.
 Tags (www.otto.de/tags/[TAGNAME]), welches derzeit die im Feed genutzten
 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Tags"
description "Stichworte"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Tags}
\end_layout

\end_inset

 aggregiert und eine Liste der relevantesten Ergebnisse darstellt und der
 StyleCreator (www.otto.de/stylecreator).
 Das Team betreut mehrere 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Microservice"
description "Services"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Microservices}
\end_layout

\end_inset

, die diese Produkte bereitstellen.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Alle Services liegen auf Systemen, die von dem exterenen Dienstleister gehosted
 werden.
 Durch die Abgesprochene Vorgehensweise werden Produkte die im Hause OTTO
 für die Webseite www.otto.de entwickelt werden auf die Maschinen des Dienstleiste
rs übertragen und lauffähig gemacht.
 Der Dienstleister stellt zusätzlich diverse Infrstrukturressourcen für
 die gesamte Plattform zur Verfügung.
\end_layout

\begin_layout Subsubsection
StyleCreator
\end_layout

\begin_layout Standard
Der StyleCreator erlaubt es Artikelbilder von www.otto.de auszuwählen, sie
 zu einer Collage zusammenzustellen und diese anschließend zu veröffentlichen.
 Der Bearbeiter kann zwischen diversen Design-Vorlagen wählen oder im freien
 Design die Collage erstellen.
 Die Freiform-Vorlage bietet dem Ersteller, anders als bei den Design-Vorlagen,
 die Möglichkeit Einzelbilder zu rotieren, zu vergrößern, zu verkleinern
 und diese freizustellen.
 Des Weiteren können die Einzelbilder frei auf der Collage versetzt und
 übereinandergelegt werden.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder/StyleCreator.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
StyleCreator im Freiform-Modus mit zwei überlappenden Artikelbildern
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Projekbegründung
\end_layout

\begin_layout Left Header
Projektbegründung
\end_layout

\begin_layout Subsection
Strategische Entscheidung
\end_layout

\begin_layout Standard
Im Rahmen einer strategischen Entscheidung wird die Plattform www.otto.de
 nicht weiter über den externen Dienstleister gehostet werden, sondern über
 die AWS bereitgestellt werden.
 Durch die autarke Aufstellung der Teams kann jedes Team zu großen Teilen
 selber entscheiden, wie die Migration ausgeführt wird und welche Entitäten
 priorisiert werden.
\end_layout

\begin_layout Subsection
Zeitlicher Rahmen
\end_layout

\begin_layout Standard
Durch die Entscheidung, den Hoster für die Plattform zu wechseln, wurde
 der derzeitige Vertrag mit diesem nicht verlängert.
 Bevor dieser Vertrag ausläuft müssen alle Teams, einschließlich der operativen,
 die Lauffähigkeit aller ihrer Kernservices in der AWS-Umgebung sichergestellt
 haben.
 Die Migration verfolgt nicht das primäre Interesse eine Kostenersparnis
 zu erlangen.
 In der Migrationsphase sollen zunächst die Kernfunktionalitäten in der
 neuen Umgebung lauffähig gemacht werden, ohne technische Schulden aufzunehmen.
\end_layout

\begin_layout Section
IST-Analyse
\end_layout

\begin_layout Subsection
Team K2
\end_layout

\begin_layout Standard
Um den Migrationsprozess, für alle Teams, erfüllbar zu machen wurde das
 Team K2 gegründet.
 In der Vorbereitungsphase auf das Projekt wurden hier erste Erfahrungen
 gesammelt, die Möglichkeiten der technischen Umsetzung und sicherheitsrelevante
 Aspekte überprüft.
 Das Team hat wichtige Infrastrukturressourcen erzeugt und stellt diese
 allen anderen Teams zur Verfügung.
 Das gesammelte Wissen dieses Teams wird im Paten-Prinzip auf die restlichen
 Teams verteilt.
 Bei technischen Problemen stehen die Kollegen von K2 als Ansprechpartner
 bereit.
\end_layout

\begin_layout Left Header
IST-Analyse
\end_layout

\begin_layout Subsubsection
Accountmanagement in der AWS-Umgebung
\end_layout

\begin_layout Standard
Unter dem AWS 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Root-Account"
description "AWS Root-Account"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Root-Account}
\end_layout

\end_inset

 von OTTO (GmbH & Co.
 KG) wurden, in Absprache mit K2, weitere AWS Accounts angelegt.
 Jedes Team erhält jeweils zwei dieser Accounts.
 Diese werden dann jeweils für die Live- und die Nonlive-Umgebung genutzt.
 Resourcen die in einem Account angelegt werden, können nicht automatisch
 auf Ressourcen der anderen Accounts zugreifen.
\end_layout

\begin_layout Subsubsection
Rollen- und Rechtemanagement in der AWS-Umgebung
\end_layout

\begin_layout Standard
Das K2 Team hat in der AWS bereits ein Rechte- und Rollenkonzept aufgebaut,
 dass es allen Teams erlaubt in der AWS generell unabhängig voneinander
 zu arbeiten.
 Jeder Benutzer benötigt einen ihm zugewiesenen Benutzeraccount.
 Dieser wird zusammen mit den Kollegen von K2 im 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "AWS Identity and Access Management"
description "AWS Identity and Access Management"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{AWS Identity and Access Management}
\end_layout

\end_inset

 (IAM) 
\begin_inset Index idx
status open

\begin_layout Plain Layout
AWS Identity and Access Management - IAM
\end_layout

\end_inset

 angelegt.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ein Benutzeraccount kann verschiedene Rollen annehmen.
 Es gibt vorgefertigte Rollen, wie zum Beispiel die Manager-, die Read-Only-
 oder die Developer-Rolle.
 Rollen werden von Benutzeraccounts explizit für einen Zeitraum angenommen.
 Mit dem Annehmen der Managerrolle in einem Account können Rechte auf Rollen
 innerhalb dieses Accounts gemanaged werden.
 Jedes Team erhält für eine oder mehrere Personen die Berechtigung die Managerro
lle anzunehmen.
 Die Benutzer mit dem Recht, diese Rolle anzunehmen, verteilen für ihr Team,
 die nötigen Rechte im Selbstmanagement.
\end_layout

\begin_layout Subsection
Abgeschlossene Migrationsaufgaben von Team Social
\end_layout

\begin_layout Subsubsection
Account-, Rollen- und Rechtemanagement
\end_layout

\begin_layout Standard
Das K2 Team hat, zusammen mit den Teammitgliedern von Social, für alle Benutzer
 einen persönlichen Benutzeraccount in der AWS angelegt und sichergestellt,
 dass die Zwei-Faktor-Authentifizierung eingerichtet ist.
 Die Managerrolle, für die Accounts von Team Social, wurde durch K2 an den
 Technischen Entwickler vergeben.
 Alle Entwickler aus dem Team wurden für die Read-Only- und Developer-Rolle
 freigeschaltet.
\end_layout

\begin_layout Subsubsection
Region
\end_layout

\begin_layout Standard
Die AWS-Umgebung besteht weltweit aus Rechenzentren, die sich in verschiedenen
 Regionen befinden.
 Jede Region ist ein separater geografischer Bereich, dieser verfügt über
 mehrere isolierte Standorte, die als Availability Zones oder Verfügbarkeitszone
n bezeichnet werden.
 Da die Plattform www.otto.de in Deutschland genutzt wird, hat sich das Team
 Social für die Region eu-central-1 entschieden.
 Diese Region wird in Frankfurt gehostet und besteht aus drei Verfügbarkeitszone
n, wie in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textit{Abbildung c.}
\end_layout

\end_inset

 dargestellt ist.
 Diese Zonen sind physisch voneinander getrennt, aber über Verbindungen
 mit geringer Latenz verbunden.
\end_layout

\begin_layout Subsubsection
Tools
\end_layout

\begin_layout Standard
Die Arbeiten für die Implementierung der grundsätzlichen Infrastruktur in
 der AWS-Umgebung wurden im August 2017 begonnen.
 Das Team hat sich entschieden AWS 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "CodeCommit"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{CodeCommit}
\end_layout

\end_inset

 zur verteilten Versionsverwaltung und die AWS 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "CodePipeline"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{CodePipeline}
\end_layout

\end_inset

 als Pipeline-Tool zu nutzen.
 Alle Ressourcen sollen einheitlich via 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "CloudFormation"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{CloudFormation}
\end_layout

\end_inset

-Templates erzeugt werden.
 Außerdem hat sich das Team in Absprache mit K2 für das 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "CloudFormation-YAML"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{CloudFormation-YAML}
\end_layout

\end_inset

-Format entschieden.
\end_layout

\begin_layout Subsubsection
Infrastruktur
\end_layout

\begin_layout Standard
Um die Infrastruktur zu generieren wurde ein 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Bootstrap"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Bootstrap}
\end_layout

\end_inset

 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Repository"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Repository}
\end_layout

\end_inset

 angelegt.
 Hierüber werden alle grundsätzlichen Infrastrukturressourcen erzeugt, die
 für alle Services des Teams benötigt werden.
 Via CloudFormation wurde ein Template erstellt, welches pro Account eine
 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Virtual Private Cloud"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Virtual Private Cloud}
\end_layout

\end_inset

 (VPC) 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Virtual Private Cloud - VPC
\end_layout

\end_inset

 erzeugt.
 Auf jede VPC wurde für jede Verfügbarkeitszone ein öffentliches und ein
 privates Subnetz erzeugt, welches jeweils über ein NAT-Gateway verbunden
 ist.
 Die Nonlive-Umgebung wird immer mit denselben Templates erstellt wie die
 Live-Umgebung und wird sich daher technisch nicht von dieser unterscheiden.
\end_layout

\begin_layout Subsubsection
Services
\end_layout

\begin_layout Standard
Vor dem Start dieser Projektarbeit hatte das Team zwei Microservices in
 die AWS-Umgebung migriert.
 Die bereits migrierten Microservices werden mit CloudFormation-Templates
 erzeugt und werden in 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Elastic Compute Cloud"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Elastic Compute Cloud}
\end_layout

\end_inset

-Container (EC2) 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Elastic Compute Cloud - EC2
\end_layout

\end_inset

 ausgeführt.
\end_layout

\begin_layout Subsection
Bevorstehende Migrationsausgaben von Team Social
\end_layout

\begin_layout Subsubsection
Imageprocessing
\end_layout

\begin_layout Standard
Die Reihenfolge der zu migrierenden Microservices wurde von Team Social
 vor der Migration des Ersten festgelegt.
 Alle Microservice wurden anhand ihrer Schnittstellen und Komplexität in
 eine sinnvolle Reihenfolge gesetzt.
 Der Microservice, der als nächstes migriert werden sollte, war Imageprocessing.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Imageprocessing Microservice bestand aus vier Kernfunktionalitäten.
 Für die Mirgation innerhalb dieser Projektarbeit sollte nur ein Teil-Service
 aus dem Service gelöst und in die AWS migriert werden.
 Der Teil-Service mit der geringsten Komplexität und den wenigsten Abhängigkeite
n war setFree.
 SetFree wurde von anderen Microservices aufgerufen, um im StyleCreator
 freigestellte Bilder während der Bearbeitung anzuzeigen.
\end_layout

\begin_layout Subsubsection
SetFree-Teil-Service
\end_layout

\begin_layout Standard
Der setFree-Teil-Service wurde über einen speziellen Endpunkt einer REST-Schnitt
stelle aufgerufen.
 Die POST-Methode des Endpunktes erwartete die Parameter „ImageId“, „width“
 und „height“, wobei die ImageId als 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Pfadparameter"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Pfadparameter}
\end_layout

\end_inset

 und die Breite und Höhe als 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Queryparameter"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Queryparameter}
\end_layout

\end_inset

 übergeben wurden.
 Die angegebene ImageId muss einer eindeutigen ID auf ein Bild, auf dem
 Otto-Image-Server entsprechen.
 Die Breite und die Höhe sind frei wählbar.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Service nutzt das von 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Node.js"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Node.js}
\end_layout

\end_inset

 bereitgestellte Package namens gm (eine Node.js Implementierung von 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "GraphicsMagick"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{GraphicsMagick}
\end_layout

\end_inset

).
 Mit diesem können Funktionen von GraphicsMagick und 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "ImageMagick"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{ImageMagick}
\end_layout

\end_inset

 ausgeführt werden.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Das Bild, welches anhand der ImageId identifizierbar ist, wird per GraphicsMagic
k mit den Werten: setFormat('png') borderColor('white') border(1, 1) fuzz(5,
 true) fill('rgba(0, 0, 0, 0)') setDraw('color', '0', '0', 'floodfill')
 quality(100) freigeschnitten und nach der Freistellung direkt im Browser
 sichtbar gemacht.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder/StyleCreator freigestellt.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
StyleCreator im Freiform-Modus mit zwei überlappenden Artikelbildern, freigestel
lt
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Projektziel
\end_layout

\begin_layout Subsection
Migrationsziel Imageprocessing
\end_layout

\begin_layout Standard
Im Rahmen der Projektarbeit sollte nur eine Funktion des Imageprocessing-Service
s freigeschnitten und migriert werden.
 Nach dieser ersten Teilmigration wird das Vorgehen bewertet und für die
 weitere Migration geprüft werden, ob der Service wie gewünscht in die AWS
 integriert wurde.
 Bei einer erfolgreichen Migration werden im Anschluss an dieses Projekt
 die anderen Funktionen in die AWS eingebaut.
\end_layout

\begin_layout Section
Projektdurchführung
\end_layout

\begin_layout Left Header
Projektdurchführung
\end_layout

\begin_layout Subsection
Umsetzungsstrategien
\end_layout

\begin_layout Standard
Um den setFree-Teil-Service aus der derzeitig gehosteten Infrastruktur des
 Dienstleisters zu trennen und in die AWS zu integrieren gibt es zwei divergente
 Lösungsansätze.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Funktion könnte, wie bei Tags, in einem EC2-Container lauffähig gemacht
 werden.
 Es müssten keine Anpassungen am Service selber vorgenommen werden.
 Leider sind EC2-Container teuer und mit dem klassischem 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Elastic Load Balancing"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Elastic Load Balancing}
\end_layout

\end_inset

 (ELB) 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Elastic Load Balancing - ELB
\end_layout

\end_inset

 können Instanzen je nach Last hoch- und heruntergefahren werden, allerdings
 sind die Durchführungszeiten sehr hoch.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Als Alternative bietet sich der Umbau als AWS 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Lambda"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Lambda}
\end_layout

\end_inset

-Funktion an.
 Hier wird ein Service nicht in einem EC2-Container sonder ohne jeglichen
 Overhead ausführbar gemacht.
 Es gibt viele 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Lambda-Trigger"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Lambda-Trigger}
\end_layout

\end_inset

 über die ein Service später gestartet werden kann.
 Eine Lambda-Funktion startet über einen solchen Trigger.
 Wenn die Funktion ausgeführt wird, wird die Instanz beendet und erzeugt
 keine weiteren Kosten.
 Potentiell ist der Erstaufruf der Funktion langsamer als bei einem vorhandenem
 Container.
\end_layout

\begin_layout Subsection
Umsetzungsstrategieentscheidung
\end_layout

\begin_layout Standard
Ich habe mich entschieden die Migration von setFree via AWS Lambda durchzuführen.
 Die setFree-Teil-Service wird vergleichsweise selten aufgerufen, dadurch
 kann der Umbau als Lambda-Funktion einen kostensparenden Effekt erzielen.
 Zudem ist die Funktion klein und wird selbst in der kleinsten von AWS angeboten
en EC2 Instanz die Ressourcen nicht auslasten.
 Sie wird nur per einfachem REST-Aufruf gestartet und Lambda-Funktionen
 können per AWS API-Gateway getriggered werden.
\end_layout

\begin_layout Subsection
Arbeitsschritte
\end_layout

\begin_layout Standard
In diesem Abschnitt werden die einzelnen Arbeitsschritte in ihrer Durchführungsr
eihenfolge beschrieben.
\end_layout

\begin_layout Subsubsection
Repository
\end_layout

\begin_layout Standard
Das Imageprocessing Repository lag in dem bisher genutzten Versionsverwaltungsto
ol 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Gitlab"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Gitlab}
\end_layout

\end_inset

, welches über den externen Dienstleister gehostet wird.
 Dieses Versionsverwaltungstool wird nach der Migration nicht mehr zur Verfügung
 stehen.
 Daher habe ich via CloudFormation ein Template geschrieben, mit dem ein
 Repository in der AWS erzeugt wird.
 Dieses Template habe ich einmalig mit 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Autostacker24"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Autostacker24}
\end_layout

\end_inset

 in die AWS deployed.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Im Anschluss habe ich das noch leere Repository auf meine Festplatte geklont.
 Ich habe alle Dateien die zur Funktionalität von setFree nötig sind aus
 dem derzeitigem Imageprocessing Repository herausgelöst und in das Neue
 übertragen.
 Des Weiteren habe ich die README.md angepasst und die neuen Dateien in das
 AWS Repository hochgeladen.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Das Repository bestand nun aus zwei Ordnern, in dem ersten befanden sich
 die setFree Dateien und in dem zweiten lagen die setFree Test Dateien.
 Die .gitignore und .eslintrc habe ich von dem voherigen Projekt behalten
 und diese befinden sich im Root-Verzeichnis.
\end_layout

\begin_layout Standard
REPOSITORY CLOUDFORMATION TEMPLATE
\end_layout

\begin_layout Subsubsection
Pipeline 
\end_layout

\begin_layout Standard
Ich habe einen neuen Unterordner für die CloudFormation-Skripte erstellt
 und ein CloudFormation-Template für die CodePipeline angelegt.
 Dieses Template enthält alle Pipeline-Schritte.
 Eine Pipeline wird als AWS::CodePipeline::Pipeline Typ definiert.
 Dieser kann ein Name vergeben werden.
 und ein Speicherort für die Ausführung muss angegeben werden.
 Die Schritte (Stages) benötigen einen Namen und Aktionen.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ich habe fünf Schritte erstellt, checkout, common, build, deploy-nonlive
 und deploy-live.
 Im checkout Schritt wird über AWS CodeCommit die Dateien heruntergeladen.
 Der common Schritt besteht aus mehreren Unterschritten.
 Hier habe ich nach Beispiel eines bereits deployten Services eine Rolle
 für diesen Service,in live und nonlive, angelegt und berechtigt.
 Danach wird die pipeline.yaml geupdatet.
 Der build Schritt wird via AWS 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "CodeBuild"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{CodeBuild}
\end_layout

\end_inset

 ausgeführt, es wird der Quellcode kompiliert und eine Build-Datei an den
 nächsten Schritt weiter gereicht.
 Die deploy-Schritte habe ich in diesem Arbeitsschritt nicht vollständig
 definiert.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ich habe die Pipeline einmalig händisch auf der Kommandozeile via 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Autostacker24"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Autostacker24}
\end_layout

\end_inset

 hochgeladen und deployed.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
autostacker24 update --template cloudformation/ci/pipeline.yaml --stack imageproc
essing-pipeline --profile [Profilname] --region eu-central-1
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
PIPELINE CLOUDFORMATION TEMPLATE
\end_layout

\begin_layout Subsubsection
AWS Lambda-Funktion Handler
\end_layout

\begin_layout Standard
Der setFreeTeil-Service lief in der Vergangenheit über das 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "Express.js"
description "fehlt"

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
underline{Express.js}
\end_layout

\end_inset

 Framework.
 Der setFreeRouter hat 
\end_layout

\begin_layout Standard
Der SetFreeService
\end_layout

\begin_layout Standard
Der SetFreeController 
\end_layout

\begin_layout Standard
Hier wird der Router für eingehende HTTP Requests definiert, er reicht diese
 an den Controller weiter und dieser sendet die HTTP Response.
\end_layout

\begin_layout Standard
Eine Lambda-Funktion wird über den 
\begin_inset Quotes pld
\end_inset

exports
\begin_inset Quotes prd
\end_inset

-Handler ausführbar gemacht.
 Ich habe den setFreeRouter gelöscht und den setFreeController in einen
 exports Handler umgeschrieben.
 Dieser Handler befindet sich im Root-Verzeichnis des Repositories.
\end_layout

\begin_layout Subsubsection
API-Gateway
\end_layout

\begin_layout Standard
akjdfhasf
\end_layout

\begin_layout Standard
API-GATEWAY CLOUDFORMATION TEMPLATE
\end_layout

\begin_layout Subsubsection
Binary Media Files
\end_layout

\begin_layout Standard
ldsfnlsdg
\end_layout

\begin_layout Subsubsection
Alarming
\end_layout

\begin_layout Standard
sjdfnlkasg
\end_layout

\begin_layout Standard
ALARMING CLOUDFORMATION TEMPLATE
\end_layout

\begin_layout Subsubsection
Lasttest
\end_layout

\begin_layout Standard
ÖFNsdlkfg
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Enumerate
In der AWS Oberfläche ein CodeCommit Repository angelegt
\end_layout

\begin_layout Enumerate
Das leere Repository auf meine Festplatte geklont
\end_layout

\begin_layout Enumerate
In dem leeren Repository erste Dateien angelegt
\end_layout

\begin_layout Enumerate
.gitignore
\end_layout

\begin_layout Enumerate
.eslintrc
\end_layout

\begin_layout Enumerate
README.md
\end_layout

\begin_layout Enumerate
Die ersten zwei Pipeline-Schritte per CodeCommit unter cloudformation/ci/pipelin
e.yaml gepusht
\end_layout

\begin_layout Enumerate
Die Pipeline via autostacker24 manuell in der aws starten
\end_layout

\begin_layout Enumerate
Autostacker24 update –template cloudformation/ci/pipeline.yaml –stack imageproces
sing-pipeline –profile social-nonlive-admin –region eu-central-1
\end_layout

\begin_layout Enumerate
Die Pipeline ist einmal erfolgreich durchgelaufen und ist in nun in aws
 als Stack gespeichert
\end_layout

\begin_layout Enumerate
Die Pipeline mit den nächsten Schritt Updaten
\end_layout

\begin_layout Enumerate
Handler bauen
\end_layout

\begin_layout Enumerate
Funktionen reduzieren und umbauen
\end_layout

\begin_layout Enumerate
Api-Gateway Funktionalitäten sicherstellen
\end_layout

\end_inset


\end_layout

\begin_layout Section
Projektlösung
\end_layout

\begin_layout Left Header
Projektlösung
\end_layout

\begin_layout Standard
hier Lösung mit Angabe 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{section}{
\backslash
textbf{Fazit}}
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Fazit
\end_layout

\begin_layout Left Header
Fazit
\end_layout

\begin_layout Standard
hier fazit
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{
\backslash
Large{Anhang}}
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{Roman}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Zwei Kapitel auf einer Seite
\end_layout

\begin_layout Plain Layout


\backslash
makeatletter
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand
\backslash
chapter{
\backslash
thispagestyle{plain}%
\end_layout

\begin_layout Plain Layout


\backslash
global
\backslash
@topnum
\backslash
z@
\end_layout

\begin_layout Plain Layout


\backslash
@afterindentfalse
\end_layout

\begin_layout Plain Layout


\backslash
secdef
\backslash
@chapter
\backslash
@schapter}
\end_layout

\begin_layout Plain Layout


\backslash
makeatother
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
thechapter}{
\backslash
Alph{chapter}}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*
Anhang
\end_layout

\begin_layout Left Header
Anhang
\end_layout

\begin_layout Chapter
Grafiken
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{figure}{2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder/aws_regions.png
	scale 70

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
AWS Region mit drei Verfügbarkeitszonen (Quelle: https://docs.aws.amazon.com/
 de_de/AWSEC2/latest/UserGuide/using-regions-availability-zones.html, 2018)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Tabellen
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="5cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Funktion
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aufgaben
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Antje Radkiewicz
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auszubildende OTTO (GmbH & Co.
 KG)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Migration des Teil-Microservice
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Christian Finckler
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Technischer Entwickler Team Social
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Begleitung der Projektarbeit, Abnahme des Projektes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stefan Kopetsch
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Technischer Entwickler Team Social
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Projektbeteiligte Personen
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
nomname}{C.
 Glossar}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{C.
 Glossar}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset nomencl_print
LatexCommand printnomenclature
set_width "auto"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
indexname}{D.
 Abkürzungsverzeichnis}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset index_print
LatexCommand printindex
type "idx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{E.
 Abbildungsverzeichnis}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
listfigurename}{E.
 Abbildungsverzeichnis}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{F.
 Tabellenverzeichnis}
\end_layout

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
listtablename}{F.
 Tabellenverzeichnis}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\end_body
\end_document
